{"functions":{"list_all_narratives":{"name":"list_all_narratives","comment":"","place":{"start_line":132,"end_line":162},"input":[{"type":"DashboardService.ListAllNarrativesParams","comment":""}],"output":[{"type":"DashboardService.ListAllNarrativesResult","comment":"typedef structure {\nworkspace_info workspace;\nobject_info object;\nlist<UserPermission> permissions;\n    } NarrativeX;"},{"type":"DashboardService.Error","comment":""},{"type":"DashboardService.RunStats","comment":""}]},"create_narrative":{"name":"create_narrative","comment":"","place":{"start_line":206,"end_line":224},"input":[{"type":"DashboardService.CreateNarrativeParam","comment":"Create Narrative"}],"output":[{"type":"DashboardService.CreateNarrativeResult","comment":""},{"type":"DashboardService.Error","comment":""}]},"delete_narrative":{"name":"delete_narrative","comment":"","place":{"start_line":251,"end_line":270},"input":[{"type":"DashboardService.DeleteNarrativeParams","comment":"Delete Narrative"}],"output":[{"type":"DashboardService.Error","comment":""}]},"share_narrative":{"name":"share_narrative","comment":"","place":{"start_line":298,"end_line":313},"input":[{"type":"DashboardService.ShareNarrativeParams","comment":"Share Narrative"}],"output":[{"type":"DashboardService.Error","comment":""}]},"unshare_narrative":{"name":"unshare_narrative","comment":"","place":{"start_line":337,"end_line":357},"input":[{"type":"DashboardService.UnshareNarrativeParams","comment":""}],"output":[{"type":"DashboardService.Error","comment":""}]},"share_narrative_global":{"name":"share_narrative_global","comment":"","place":null,"input":[{"type":"DashboardService.ShareNarrativeGlobalParams","comment":""}],"output":[{"type":"DashboardService.Error","comment":""}]},"unshare_narrative_global":{"name":"unshare_narrative_global","comment":"","place":{"start_line":404,"end_line":419},"input":[{"type":"DashboardService.UnshareNarrativeGlobalParams","comment":""}],"output":[{"type":"DashboardService.Error","comment":""}]}},"module_name":"DashboardService","sdk_version":"1.0.18","sdk_git_commit":"25ac21f827f525b6899e4a5ffb8f4a9e6d7498b6","impl_file_path":"lib/DashboardService/DashboardServiceImpl.py","spec_files":[{"content":"/*\nA KBase module: DashboardService\n*/\n\nmodule DashboardService {\n\n    typedef structure {\n        string message;\n        string type;\n        string code;\n        UnspecifiedObject info;\n    } Error;\n\n    /* @range [0,1] */\n    typedef int boolean;\n\n    /*\n        A time in the format YYYY-MM-DDThh:mm:ssZ, where Z is either the\n        character Z (representing the UTC timezone) or the difference\n        in time to UTC in the format +/-HHMM, eg:\n            2012-12-17T23:24:06-0500 (EST time)\n            2013-04-03T08:56:32+0000 (UTC time)\n            2013-04-03T08:56:32Z (UTC time)\n    */\n    typedef string timestamp;\n\n    /* Represents the permissions a user or users have to a workspace:\n\n        'a' - administrator. All operations allowed.\n        'w' - read/write.\n        'r' - read.\n        'n' - no permissions.\n    */\n    typedef string permission;\n\n    /* The lock status of a workspace.\n        One of 'unlocked', 'locked', or 'published'.\n    */\n    typedef string lock_status;\n\n    /* from workspace_deluxe \n       Note too that naming conventions for parameters using these types \n       (may) also use the workspace_deluxe conventions.\n       workspace\n    */\n    typedef int ws_id;\n    typedef int obj_id;\n    typedef int obj_ver;\n    typedef string ws_name;\n    typedef structure {\n        ws_name workspace;\n        ws_id id;\n    } WorkspaceIdentity;\n\n    typedef structure {\n        ws_id workspace_id;\n        obj_id object_id;\n        obj_ver version;\n    } ObjectIdentity;\n\n\n    /* Information about an object, including user provided metadata.\n\n        obj_id objid - the numerical id of the object.\n        obj_name name - the name of the object.\n        type_string type - the type of the object.\n        timestamp save_date - the save date of the object.\n        obj_ver ver - the version of the object.\n        username saved_by - the user that saved or copied the object.\n        ws_id wsid - the workspace containing the object.\n        ws_name workspace - the workspace containing the object.\n        string chsum - the md5 checksum of the object.\n        int size - the size of the object in bytes.\n        usermeta meta - arbitrary user-supplied metadata about\n            the object.\n    */\n    typedef tuple<int objid, string name, string type,\n        timestamp save_date, int version, string saved_by,\n        int wsid, string workspace, string chsum, int size,\n        mapping<string, string> meta> object_info;\n\n    /* Information about a workspace.\n\n        ws_id id - the numerical ID of the workspace.\n        ws_name workspace - name of the workspace.\n        username owner - name of the user who owns (e.g. created) this workspace.\n        timestamp moddate - date when the workspace was last modified.\n        int max_objid - the maximum object ID appearing in this workspace.\n            Since cloning a workspace preserves object IDs, this number may be\n            greater than the number of objects in a newly cloned workspace.\n        permission user_permission - permissions for the authenticated user of\n            this workspace.\n        permission globalread - whether this workspace is globally readable.\n        lock_status lockstat - the status of the workspace lock.\n        usermeta metadata - arbitrary user-supplied metadata about\n            the workspace.\n\n    */\n    typedef tuple<int id, string workspace, string owner, string moddate,\n        int max_objid, string user_permission, string globalread,\n        string lockstat, mapping<string, string> metadata> workspace_info;\n\n    typedef structure {\n        list<object_info> set_items_info;\n    } SetItems;\n\n    /* Restructured workspace object info 'data' tuple:\n        id: data[0],\n        name: data[1],\n        type: data[2],\n        save_date: data[3],\n        version: data[4],\n        saved_by: data[5],\n        wsid: data[6],\n        ws: data[7],\n        checksum: data[8],\n        size: data[9],\n        metadata: data[10],\n        ref: data[6] + '/' + data[0] + '/' + data[4],\n        obj_id: 'ws.' + data[6] + '.obj.' + data[0],\n        typeModule: type[0],\n        typeName: type[1],\n        typeMajorVersion: type[2],\n        typeMinorVersion: type[3],\n        saveDateMs: ServiceUtils.iso8601ToMillisSinceEpoch(data[3])\n    */\n    typedef structure {\n        int id;\n        string name;\n        string type;\n        string save_date;\n        int version;\n        string saved_by;\n        int wsid;\n        string ws;\n        string checksum;\n        int size;\n        mapping<string,string> metadata;\n        string ref;\n        string obj_id;\n        string typeModule;\n        string typeName;\n        string typeMajorVersion;\n        string typeMinorVersion;\n        int saveDateMs;\n    } ObjectInfo;\n\n    /* Restructured workspace info 'wsInfo' tuple:\n        id: wsInfo[0],\n        name: wsInfo[1],\n        owner: wsInfo[2],\n        moddate: wsInfo[3],\n        object_count: wsInfo[4],\n        user_permission: wsInfo[5],\n        globalread: wsInfo[6],\n        lockstat: wsInfo[7],\n        metadata: wsInfo[8],\n        modDateMs: ServiceUtils.iso8601ToMillisSinceEpoch(wsInfo[3])\n    */\n    typedef structure {\n        int id;\n        string name;\n        string owner;\n        timestamp moddate;\n        int object_count;\n        permission user_permission;\n        permission globalread;\n        lock_status lockstat;\n        mapping<string,string> metadata;\n        int modDateMs;\n    } WorkspaceInfo;\n\n    typedef tuple<int step_pos, string key, string value> AppParam;\n\n    /* ********************************** */\n    /* Listing Narratives / Naratorials (plus Narratorial Management) */\n\n\n    /* TODO: specify! */\n\n    /* typedef UnspecifiedObject NarrativePermission; */\n    typedef UnspecifiedObject NarrativeCellStat;\n\n    typedef structure {\n        string id;\n        int count;\n    } NarrativeApp;\n\n    typedef string Username;\n\n    typedef structure {\n        Username username;\n        permission permission;\n    } UserPermission;\n\n    typedef structure {\n        obj_id objectId;\n        obj_ver objectVersion;\n        string owner;\n        string permission;\n        boolean isPublic;\n        boolean isNarratorial;\n        string title;\n        int savedTime;\n        string savedBy;\n        list<UserPermission> permissions;\n        list<NarrativeCellStat> cellTypes;\n        list<NarrativeApp> apps;\n    } Narrative;    \n\n    /*typedef structure {\n        workspace_info workspace;\n        object_info object;\n    } Narrative;\n\n    typedef structure {\n        list <Narrative> narratives;\n    } NarrativeList;*/\n\n    /* LIST ALL NARRATIVES */\n\n    typedef UnspecifiedObject UserProfile;\n\n    /* Just the subset of info that the front end will use */\n    typedef string AppID;\n    typedef structure {\n        AppID id;\n        boolean notFound;\n        string title;\n        string subtitle;\n        string iconURL;\n    } App;\n\n    /*typedef structure {\n        workspace_info workspace;\n        object_info object;\n        list<UserPermission> permissions;\n    } NarrativeX;*/\n\n    typedef structure {\n        list<Narrative> narratives;\n        mapping<Username, UserProfile> profiles;\n        mapping<AppID, App> apps;\n    } ListAllNarrativesResult;\n\n    typedef structure {\n        timestamp just_modified_after;\n    } ListAllNarrativesParams;\n\n    typedef structure {\n        list<tuple<string,int>> timings;\n    } RunStats;\n\n    funcdef list_all_narratives(ListAllNarrativesParams params)\n        returns (ListAllNarrativesResult result, Error error, RunStats stats) authentication optional;\n\n    /* \n        Create Narrative \n    */\n\n    typedef structure {\n        string title;       /* optional - if omitted, will be a temporary narrative */\n        ws_name name; /* optional */\n    } CreateNarrativeParam;\n\n    typedef structure {\n        Narrative narrative;\n    } CreateNarrativeResult;\n\n    funcdef create_narrative(CreateNarrativeParam param)\n        returns (CreateNarrativeResult result, Error error) authentication required;\n\n    /* \n        Delete Narrative \n    */\n\n    typedef structure {\n        ObjectIdentity obji;\n    } DeleteNarrativeParams;        \n\n    funcdef delete_narrative(DeleteNarrativeParams params) \n        returns (Error error) authentication required;\n\n    /*\n        Share Narrative \n    */\n\n    typedef structure {\n        WorkspaceIdentity wsi;\n        list<Username> users;\n        permission permission;\n    } ShareNarrativeParams;\n\n    funcdef share_narrative(ShareNarrativeParams params)\n        returns (Error error) authentication required;\n\n    typedef structure {\n        WorkspaceIdentity wsi;\n        list<Username> users;\n    } UnshareNarrativeParams;\n\n    funcdef unshare_narrative(UnshareNarrativeParams params)\n        returns (Error error) authentication required;\n\n    typedef structure {\n        WorkspaceIdentity wsi;\n    } ShareNarrativeGlobalParams;\n\n    funcdef share_narrative_global(ShareNarrativeGlobalParams params) \n        returns (Error error) authentication required;\n\n    typedef structure {\n        WorkspaceIdentity wsi;\n    } UnshareNarrativeGlobalParams;\n\n    funcdef unshare_narrative_global(UnshareNarrativeGlobalParams params)\n        returns (Error error) authentication required;\n\n};\n","file_name":"DashboardService.spec","is_main":1}],"function_places":{"list_all_narratives":{"start_line":132,"end_line":162},"create_narrative":{"start_line":206,"end_line":224},"delete_narrative":{"start_line":251,"end_line":270},"share_narrative":{"start_line":298,"end_line":313},"unshare_narrative":{"start_line":337,"end_line":357},"unshare_narrative_global":{"start_line":404,"end_line":419}}}